// Generated by Dagger (https://dagger.dev).
package com.team1.issuetracker.ui.main.label;

import com.team1.issuetracker.data.repository.LabelRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LabelViewModel_Factory implements Factory<LabelViewModel> {
  private final Provider<LabelRepository> repositoryProvider;

  public LabelViewModel_Factory(Provider<LabelRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public LabelViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static LabelViewModel_Factory create(Provider<LabelRepository> repositoryProvider) {
    return new LabelViewModel_Factory(repositoryProvider);
  }

  public static LabelViewModel newInstance(LabelRepository repository) {
    return new LabelViewModel(repository);
  }
}
