// Generated by Dagger (https://dagger.dev).
package com.team1.issuetracker.ui.main.milestone;

import com.team1.issuetracker.data.repository.MilestoneRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MilestoneViewModel_Factory implements Factory<MilestoneViewModel> {
  private final Provider<MilestoneRepository> repositoryProvider;

  public MilestoneViewModel_Factory(Provider<MilestoneRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public MilestoneViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static MilestoneViewModel_Factory create(
      Provider<MilestoneRepository> repositoryProvider) {
    return new MilestoneViewModel_Factory(repositoryProvider);
  }

  public static MilestoneViewModel newInstance(MilestoneRepository repository) {
    return new MilestoneViewModel(repository);
  }
}
