// Generated by Dagger (https://dagger.dev).
package com.team1.issuetracker.data.datasource;

import com.team1.issuetracker.data.network.LabelApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LabelDataSourceImpl_Factory implements Factory<LabelDataSourceImpl> {
  private final Provider<LabelApi> apiProvider;

  public LabelDataSourceImpl_Factory(Provider<LabelApi> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public LabelDataSourceImpl get() {
    return newInstance(apiProvider.get());
  }

  public static LabelDataSourceImpl_Factory create(Provider<LabelApi> apiProvider) {
    return new LabelDataSourceImpl_Factory(apiProvider);
  }

  public static LabelDataSourceImpl newInstance(LabelApi api) {
    return new LabelDataSourceImpl(api);
  }
}
