// Generated by Dagger (https://dagger.dev).
package com.team1.issuetracker.data.datasource;

import com.team1.issuetracker.data.network.MilestoneApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MilestoneDataSourceImpl_Factory implements Factory<MilestoneDataSourceImpl> {
  private final Provider<MilestoneApi> apiProvider;

  public MilestoneDataSourceImpl_Factory(Provider<MilestoneApi> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public MilestoneDataSourceImpl get() {
    return newInstance(apiProvider.get());
  }

  public static MilestoneDataSourceImpl_Factory create(Provider<MilestoneApi> apiProvider) {
    return new MilestoneDataSourceImpl_Factory(apiProvider);
  }

  public static MilestoneDataSourceImpl newInstance(MilestoneApi api) {
    return new MilestoneDataSourceImpl(api);
  }
}
