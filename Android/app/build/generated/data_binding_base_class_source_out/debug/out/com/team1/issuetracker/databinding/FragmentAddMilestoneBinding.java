// Generated by data binding compiler. Do not edit!
package com.team1.issuetracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.team1.issuetracker.R;
import com.team1.issuetracker.ui.main.milestone.AddMilestoneViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentAddMilestoneBinding extends ViewDataBinding {
  @NonNull
  public final ImageView btnCalendar;

  @NonNull
  public final EditText etDate;

  @NonNull
  public final EditText etDescription;

  @NonNull
  public final EditText etTitle;

  @NonNull
  public final View line;

  @NonNull
  public final AppBarLayout loAppbar;

  @NonNull
  public final MaterialToolbar topAppBar;

  @NonNull
  public final TextView tvDateLabel;

  @NonNull
  public final TextView tvDescriptionLabel;

  @NonNull
  public final TextView tvTitleLabel;

  @NonNull
  public final View viewDate;

  @NonNull
  public final View viewDescription;

  @NonNull
  public final View viewLast;

  @NonNull
  public final View viewTitle;

  @Bindable
  protected AddMilestoneViewModel mViewModel;

  protected FragmentAddMilestoneBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView btnCalendar, EditText etDate, EditText etDescription, EditText etTitle, View line,
      AppBarLayout loAppbar, MaterialToolbar topAppBar, TextView tvDateLabel,
      TextView tvDescriptionLabel, TextView tvTitleLabel, View viewDate, View viewDescription,
      View viewLast, View viewTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnCalendar = btnCalendar;
    this.etDate = etDate;
    this.etDescription = etDescription;
    this.etTitle = etTitle;
    this.line = line;
    this.loAppbar = loAppbar;
    this.topAppBar = topAppBar;
    this.tvDateLabel = tvDateLabel;
    this.tvDescriptionLabel = tvDescriptionLabel;
    this.tvTitleLabel = tvTitleLabel;
    this.viewDate = viewDate;
    this.viewDescription = viewDescription;
    this.viewLast = viewLast;
    this.viewTitle = viewTitle;
  }

  public abstract void setViewModel(@Nullable AddMilestoneViewModel viewModel);

  @Nullable
  public AddMilestoneViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentAddMilestoneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_add_milestone, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentAddMilestoneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentAddMilestoneBinding>inflateInternal(inflater, R.layout.fragment_add_milestone, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentAddMilestoneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_add_milestone, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentAddMilestoneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentAddMilestoneBinding>inflateInternal(inflater, R.layout.fragment_add_milestone, null, false, component);
  }

  public static FragmentAddMilestoneBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentAddMilestoneBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentAddMilestoneBinding)bind(component, view, R.layout.fragment_add_milestone);
  }
}
