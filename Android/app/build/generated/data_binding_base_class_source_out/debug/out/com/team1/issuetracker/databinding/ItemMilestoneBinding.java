// Generated by data binding compiler. Do not edit!
package com.team1.issuetracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.team1.issuetracker.R;
import com.team1.issuetracker.data.model.Milestone;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemMilestoneBinding extends ViewDataBinding {
  @NonNull
  public final CheckBox checkbox;

  @NonNull
  public final ConstraintLayout clCheckbox;

  @NonNull
  public final CardView cvClosedBadge;

  @NonNull
  public final CardView cvOpenBadge;

  @NonNull
  public final View emptyView1;

  @NonNull
  public final View emptyView11;

  @NonNull
  public final View emptyView2;

  @NonNull
  public final View emptyView3;

  @NonNull
  public final View emptyView4;

  @NonNull
  public final View emptyView5;

  @NonNull
  public final View emptyViewStart;

  @NonNull
  public final ConstraintLayout eraseItemView;

  @NonNull
  public final Guideline glH30;

  @NonNull
  public final Guideline glV9556;

  @NonNull
  public final ImageView ivCalendar;

  @NonNull
  public final ImageView ivClose;

  @NonNull
  public final ConstraintLayout milestoneView;

  @NonNull
  public final TextView tvClose;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvMilestoneContent;

  @NonNull
  public final TextView tvMilestoneProgress;

  @NonNull
  public final TextView tvMilestoneTitle;

  @NonNull
  public final View viewForContent;

  @NonNull
  public final View viewLine;

  @Bindable
  protected Milestone mItem;

  protected ItemMilestoneBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CheckBox checkbox, ConstraintLayout clCheckbox, CardView cvClosedBadge, CardView cvOpenBadge,
      View emptyView1, View emptyView11, View emptyView2, View emptyView3, View emptyView4,
      View emptyView5, View emptyViewStart, ConstraintLayout eraseItemView, Guideline glH30,
      Guideline glV9556, ImageView ivCalendar, ImageView ivClose, ConstraintLayout milestoneView,
      TextView tvClose, TextView tvDate, TextView tvMilestoneContent, TextView tvMilestoneProgress,
      TextView tvMilestoneTitle, View viewForContent, View viewLine) {
    super(_bindingComponent, _root, _localFieldCount);
    this.checkbox = checkbox;
    this.clCheckbox = clCheckbox;
    this.cvClosedBadge = cvClosedBadge;
    this.cvOpenBadge = cvOpenBadge;
    this.emptyView1 = emptyView1;
    this.emptyView11 = emptyView11;
    this.emptyView2 = emptyView2;
    this.emptyView3 = emptyView3;
    this.emptyView4 = emptyView4;
    this.emptyView5 = emptyView5;
    this.emptyViewStart = emptyViewStart;
    this.eraseItemView = eraseItemView;
    this.glH30 = glH30;
    this.glV9556 = glV9556;
    this.ivCalendar = ivCalendar;
    this.ivClose = ivClose;
    this.milestoneView = milestoneView;
    this.tvClose = tvClose;
    this.tvDate = tvDate;
    this.tvMilestoneContent = tvMilestoneContent;
    this.tvMilestoneProgress = tvMilestoneProgress;
    this.tvMilestoneTitle = tvMilestoneTitle;
    this.viewForContent = viewForContent;
    this.viewLine = viewLine;
  }

  public abstract void setItem(@Nullable Milestone item);

  @Nullable
  public Milestone getItem() {
    return mItem;
  }

  @NonNull
  public static ItemMilestoneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_milestone, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemMilestoneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemMilestoneBinding>inflateInternal(inflater, R.layout.item_milestone, root, attachToRoot, component);
  }

  @NonNull
  public static ItemMilestoneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_milestone, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemMilestoneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemMilestoneBinding>inflateInternal(inflater, R.layout.item_milestone, null, false, component);
  }

  public static ItemMilestoneBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemMilestoneBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemMilestoneBinding)bind(component, view, R.layout.item_milestone);
  }
}
